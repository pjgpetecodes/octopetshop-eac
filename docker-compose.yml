version: '3.4'

services:
  sql-server:
    container_name: sql-server
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "OctopusDeploy_1234"
      ACCEPT_EULA: "Y"
  
  productservice:
    container_name: productservice
    environment:
      - OPSConnectionString=Data Source=sql-server;Initial Catalog=OctoPetShop; User ID=sa; Password=OctopusDeploy_1234
    image: ${DOCKER_REGISTRY-}productservice
    build:
      context: .
      dockerfile: OctopusSamples.OctoPetShop.ProductService/Dockerfile
    ports:
      - "5014:80"
      - "5015:443"
    depends_on: 
      - "database"

  shoppingcartservice:
    container_name: shoppingcartservice
    image: ${DOCKER_REGISTRY-}shoppingcartservice
    build:
      context: .
      dockerfile: OctopusSamples.OctoPetShop.ShoppingCartService/Dockerfile
    environment:
      - OPSConnectionString=Data Source=sql-server;Initial Catalog=OctoPetShop; User ID=sa; Password=OctopusDeploy_1234
    ports:
      - "5012:80"
      - "5013:443"
    depends_on: 
      - "database"

  web:
    container_name: web
    image: ${DOCKER_REGISTRY-}web
    build:
      context: .
      dockerfile: OctopusSamples.OctoPetShop.Web/Dockerfile
    environment:
      - ProductServiceBaseUrl=http://productservice
      - ShoppingCartServiceBaseUrl=http://shoppingcartservice
    ports:
      - "5000:80"
      - "5001:443"
    depends_on: 
      - "shoppingcartservice"
      - "productservice"

  database:
    container_name: database
    environment:
      - DbUpConnectionString=Data Source=sql-server;Initial Catalog=OctoPetShop; User ID=sa; Password=OctopusDeploy_1234
    image: ${DOCKER_REGISTRY-}database
    build:
      context: .
      dockerfile: OctopusSamples.OctoPetShop.Database/Dockerfile
    depends_on: 
      - "sql-server" 
